{"version":3,"file":"static/js/12.efe2ec9d.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/outline/esm/PhotographIcon.js","components/doctorProfileCalendar/DoctorProfileCalendar.jsx","pages/doctor/profile/doctorProfile/doctorProfile.jsx","redux/actions/patients.js"],"sourcesContent":["import * as React from \"react\";\n\nfunction PhotographIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(PhotographIcon);\nexport default ForwardRef;","import clsx from \"clsx\";\nimport { useEffect, useState } from \"react\";\n\nexport const DoctorProfileCalendar = ({ setWorkCalendar, dataFromPatient }) => {\n  const role = localStorage.getItem(\"role\");\n  let data = [\n    {\n      id: 1,\n      dayOfWeek: \"Monday\",\n      times: [\"09:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\"],\n    },\n    {\n      id: 2,\n      dayOfWeek: \"Tuesday\",\n      times: [\"09:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\"],\n    },\n    {\n      id: 3,\n      dayOfWeek: \"Wednesday\",\n      times: [\"09:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\"],\n    },\n    {\n      id: 4,\n      dayOfWeek: \"Thursday\",\n      times: [\"09:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\"],\n    },\n    {\n      id: 5,\n      dayOfWeek: \"Friday\",\n      times: [\"09:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\"],\n    },\n  ];\n\n  useEffect(() => {\n    if (dataFromPatient !== undefined) {\n      data = dataFromPatient;\n    }\n  }, []);\n\n  return (\n    <div className=\"flex py-9 shadow-inner flex-col bg-white items-center justify-center\">\n      <h1>Reception hours</h1>\n      <div className=\"flex mt-3 flex-row w-full justify-evenly items-start\">\n        {role === \"PATIENT\"\n          ? dataFromPatient.map((item, index) => (\n              <RowWithDayAndTime\n                times={item.times}\n                dayOfWeek={item.dayOfWeek}\n                key={`${item.dayOfWeek} ${index}`}\n                setWorkCalendar={setWorkCalendar}\n              />\n            ))\n          : data.map((item) => (\n              <RowWithDayAndTime\n                times={item.times}\n                dayOfWeek={item.dayOfWeek}\n                key={item.dayOfWeek}\n                setWorkCalendar={setWorkCalendar}\n              />\n            ))}\n      </div>\n    </div>\n  );\n};\n\nconst RowWithDayAndTime = ({ dayOfWeek, times, setWorkCalendar }) => {\n  return (\n    <div className=\"flex flex-col items-center justify-center\">\n      <h3>{dayOfWeek}</h3>\n      <Time\n        timeByDay={times}\n        day={dayOfWeek}\n        setWorkCalendar={setWorkCalendar}\n      />\n    </div>\n  );\n};\n\nconst Time = ({ timeByDay, day, setWorkCalendar }) => {\n  const [checked, setChecked] = useState(\"\");\n\n  return (\n    <ul className=\"mt-3.5 space-y-2.5\">\n      {timeByDay.map((time) => (\n        <li\n          key={time}\n          onClick={() => {\n            setChecked((prevState) => [...prevState, time]);\n            setWorkCalendar((prevState) => [\n              ...prevState,\n              { time, dayOfWeek: day.toUpperCase() },\n            ]);\n          }}\n          className={clsx(\n            \"px-2 py-1.5 rounded-lg border flex items-center justify-center\",\n            \"active:bg-[#3A57E8]\",\n            checked.includes(time) && \"bg-[#3A57E8] text-white\",\n            \"focus:outline-none focus:ring focus:ring-violet-300\"\n          )}\n        >\n          {time.substring(0, 5)}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { Link, NavLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { HeadingProfile, LastNotificationList } from \"../../../../components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"../../../../ui/button/button\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Modal } from \"../../../../ui/modal/modal\";\nimport { PencilAltIcon, PhotographIcon } from \"@heroicons/react/outline\";\nimport { Dialog } from \"@headlessui/react\";\nimport { publicRequest } from \"../../../../api/requestMethods\";\nimport { DoctorProfileCalendar } from \"../../../../components/doctorProfileCalendar\";\nimport { getMyPatients } from \"../../../../redux/actions/patients\";\nimport { toast } from \"react-toastify\";\n\nexport const DoctorProfile = () => {\n  const me = useSelector(({ user }) => user.me);\n  const { patients } = useSelector(({ patients }) => patients);\n  console.log(me);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenAvatar, setIsOpenAvatar] = useState(false);\n  const cancelButtonRef = useRef(null);\n  const [workCalendar, setWorkCalendar] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const dispatch = useDispatch();\n\n  const setFileHandler = (event) => {\n    setSelectedFile(event.target.files[0]);\n    console.log(selectedFile, \"selectedFile\");\n  };\n\n  const handleSubmitAvatar = async (e) => {\n    e.preventDefault();\n    if (selectedFile !== null) {\n      const formData = new FormData();\n\n      // Update the formData object\n      formData.append(\"file\", selectedFile);\n\n      formData.append(\"typeId\", 2);\n\n      console.log(formData, \"formData\");\n\n      try {\n        await publicRequest\n          .post(\"/api/v1/file/upload/avatar\", formData, {\n            headers: {\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n              ContentType: \"multipart/form-data\",\n            },\n          })\n          .then(() => {\n            toast(\"Avatar successfully uploaded\", {\n              type: \"success\",\n              position: \"top-right\",\n            });\n          });\n      } catch (e) {\n        toast(e.data.message || e.message, {\n          type: \"error\",\n          position: \"top-right\",\n        });\n      }\n    }\n    setIsOpenAvatar(false);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(workCalendar);\n    try {\n      await publicRequest\n        .post(\"api/v1/schedule/create\", workCalendar, {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n            Application: \"application/json\",\n          },\n        })\n        .then(() => {\n          toast(\"Schedule created successfully\", {\n            type: \"success\",\n            position: \"top-right\",\n          });\n        });\n    } catch (e) {\n      toast(e.data.message || e.message, {\n        type: \"error\",\n        position: \"top-right\",\n      });\n    }\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    dispatch(getMyPatients());\n  }, []);\n\n  return (\n    <>\n      {me !== null && (\n        <>\n          <HeadingProfile\n            className=\"cursor-pointer\"\n            onClick={() => setIsOpenAvatar(true)}\n            name={`Dr. ${me.user.firstName} ${me.user.lastName}`}\n          />\n          <div className={clsx(\"grid grid-cols-1 gap-5\", \"sm:grid-cols-2\")}>\n            <NavLink to=\"/doctor/patients\">\n              <ConsultingCart\n                type=\"Offline\"\n                when=\"Today\"\n                count={patients.length}\n              />\n            </NavLink>\n            <ConsultingCart type=\"Online\" when=\"Today\" count=\"0\" />\n          </div>\n          <Button name=\"Add opening hours\" onClick={() => setIsOpen(true)} />\n          <LastNotificationList className=\"py-4 px-2.5\" isDoctor={true} />\n          <Modal\n            isOpen={isOpen}\n            setIsOpen={setIsOpen}\n            handleSubmit={handleSubmit}\n          >\n            <div>\n              <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100\">\n                <PencilAltIcon\n                  className=\"h-6 w-6 text-green-600\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n              <div className=\"mt-3 text-center sm:mt-5\">\n                <Dialog.Title\n                  as=\"h3\"\n                  className=\"text-lg leading-6 font-medium text-gray-900\"\n                >\n                  Add opening hours\n                </Dialog.Title>\n                <div className=\"mt-2\">\n                  <DoctorProfileCalendar setWorkCalendar={setWorkCalendar} />\n                </div>\n              </div>\n            </div>\n            <div className=\"mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense\">\n              <button\n                type=\"submit\"\n                className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm\"\n              >\n                Submit\n              </button>\n              <button\n                type=\"button\"\n                className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm\"\n                onClick={() => setIsOpen(false)}\n                ref={cancelButtonRef}\n              >\n                Cancel\n              </button>\n            </div>\n          </Modal>\n          <Modal\n            isOpen={isOpenAvatar}\n            setIsOpen={setIsOpenAvatar}\n            handleSubmit={handleSubmitAvatar}\n          >\n            <div>\n              <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100\">\n                <PhotographIcon\n                  className=\"h-6 w-6 text-green-600\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n              <div className=\"mt-3 text-center sm:mt-5\">\n                <Dialog.Title\n                  as=\"h3\"\n                  className=\"text-lg leading-6 font-medium text-gray-900\"\n                >\n                  Add avatar\n                </Dialog.Title>\n                <div className=\"mt-2\">\n                  <label\n                    htmlFor=\"avatar\"\n                    className=\"flex flex-col text-gray-500 text-md items-start\"\n                  >\n                    Please choose your photo\n                    <input\n                      type=\"file\"\n                      onChange={setFileHandler}\n                      className=\"mt-2\"\n                    />\n                  </label>\n                </div>\n              </div>\n            </div>\n            <div className=\"mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense\">\n              <button\n                type=\"submit\"\n                className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm\"\n              >\n                Submit\n              </button>\n              <button\n                type=\"button\"\n                className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm\"\n                onClick={() => setIsOpenAvatar(false)}\n                ref={cancelButtonRef}\n              >\n                Cancel\n              </button>\n            </div>\n          </Modal>\n        </>\n      )}\n    </>\n  );\n};\n\nconst ConsultingCart = ({ type, when, count }) => {\n  return (\n    <div className=\"flex flex-col bg-white rounded-xl shadow-lg p-3 justify-between\">\n      <div className=\"font-normal\">\n        <h1 className=\"text-xl\">{type} Consultation</h1>\n        <p className=\"text-sm text-gray-400\">{when}</p>\n      </div>\n      <div className=\"flex flex-row justify-between items-end mt-12\">\n        <p className=\"font-normal text-5xl text-[#3A57E8]\">{count}</p>\n        <Link to=\"#\" className=\"font-normal text-sm text-end\">\n          View All\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import { publicRequest } from \"../../api/requestMethods\";\nimport { toast } from \"react-toastify\";\n\nexport const setPatient = (payload) => ({\n  type: \"SET_PATIENT\",\n  payload,\n});\n\nexport const setFetching = (payload) => ({\n  type: \"SET_IS_FETCHING\",\n  payload,\n});\n\nexport const setError = (payload) => ({\n  type: \"SET_ERROR\",\n  payload,\n});\n\nexport const getPatient = (id) => async (dispatch) => {\n  dispatch(setFetching(true));\n  console.log(id, \"here\");\n  try {\n    const response = await publicRequest.get(\n      \"/api/v1/doctor/profile/patient/\" + id,\n      {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      }\n    );\n    console.log(\"try\", response);\n    dispatch(setPatient(response.data));\n  } catch (e) {\n    console.log(e);\n    dispatch(setError(true));\n  }\n  dispatch(setFetching(false));\n};\n\nexport const setPatients = (payload) => ({\n  type: \"GET_PATIENTS\",\n  payload,\n});\n\nexport const getMyPatients = () => async (dispatch) => {\n  try {\n    await publicRequest\n      .get(\"/api/v1/doctor/patients/\", {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((res) => {\n        dispatch(setPatients(res.data));\n      });\n  } catch (e) {\n    toast(\"Error fetching patients\", {\n      type: \"error\",\n      position: \"top-right\",\n    });\n  }\n};\n"],"names":["React","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","DoctorProfileCalendar","setWorkCalendar","dataFromPatient","role","localStorage","getItem","data","id","dayOfWeek","times","useEffect","undefined","className","map","item","index","RowWithDayAndTime","Time","timeByDay","day","useState","checked","setChecked","time","onClick","prevState","toUpperCase","clsx","includes","substring","DoctorProfile","me","useSelector","user","patients","console","log","isOpen","setIsOpen","isOpenAvatar","setIsOpenAvatar","cancelButtonRef","useRef","workCalendar","selectedFile","setSelectedFile","dispatch","useDispatch","handleSubmitAvatar","e","preventDefault","formData","FormData","append","publicRequest","headers","Authorization","ContentType","then","toast","type","position","message","handleSubmit","Application","getMyPatients","name","firstName","lastName","to","ConsultingCart","when","count","length","isDoctor","PencilAltIcon","as","htmlFor","onChange","event","target","files","setFetching","payload","setError","getPatient","response","res"],"sourceRoot":""}