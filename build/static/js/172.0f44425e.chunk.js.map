{"version":3,"file":"static/js/172.0f44425e.chunk.js","mappings":"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","sources":["components/admin-blocks/AdminBlocks.jsx","pages/admin/admin-clinic/admin-clinic-pages/admin-clinic.jsx","../node_modules/@heroicons/react/outline/esm/HomeIcon.js","../node_modules/@heroicons/react/outline/esm/UserAddIcon.js","../node_modules/@heroicons/react/outline/esm/UserGroupIcon.js"],"sourcesContent":["import { Button } from \"../../ui/button/button\";\n\nexport const Block = ({\n  heading1,\n  heading1Content,\n  heading2,\n  heading2Content,\n  heading3,\n  heading3Content,\n}) => {\n  return (\n    <div className=\"flex flex-row justify-between items-center py-2 px-4 h-[65px] rounded-xl bg-white my-2 mx-4\">\n      <div className=\"flex flex-row space-x-8 items-center\">\n        <TextBlock fieldHeader={heading1} content={heading1Content} />\n        <TextBlock fieldHeader={heading2} content={heading2Content} />\n        {heading3 && (\n          <TextBlock fieldHeader={heading3} content={heading3Content} />\n        )}\n      </div>\n      <div className=\"space-x-4\">\n        <Button name=\"Edit\" style=\"w-20 rounded-3xl\tbg-blue\" />\n        <Button name=\"Delete\" style=\"w-20 rounded-3xl bg-red-600\" />\n      </div>\n    </div>\n  );\n};\n\nconst TextBlock = ({ fieldHeader, content }) => {\n  return (\n    <div className=\"flex flex-col text-center w-[160px] h-fit justify-start items-center\">\n      <p className=\"opacity-40 text-sm\">{fieldHeader}</p>\n      <p className=\"text-md\">{content}</p>\n    </div>\n  );\n};\n","import { List } from \"../../../../components\";\nimport { PlusCircleIcon } from \"@heroicons/react/solid\";\nimport { Block } from \"../../../../components/admin-blocks\";\nimport {\n  HomeIcon,\n  LocationMarkerIcon,\n  PhoneIcon,\n  StarIcon,\n  UserAddIcon,\n  UserGroupIcon,\n} from \"@heroicons/react/outline\";\nimport { Dialog } from \"@headlessui/react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport clsx from \"clsx\";\nimport photo_clinic from \"../../../../images/example_photo_clinic.png\";\nimport Loader from \"../../../../ui/loader/loader\";\nimport { Button } from \"../../../../ui/button/button\";\nimport { Modal } from \"../../../../ui/modal/modal\";\nimport { Datalist } from \"../../../../ui/datalist/datalist\";\nimport { publicRequest } from \"../../../../api/requestMethods\";\nimport { toast } from \"react-toastify\";\nimport { getDoctorsWithHospitalId } from \"../../../../redux/actions/doctors\";\n\nexport const AdminClinic = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [specializations, setSpecializations] = useState([]);\n  const cancelButtonRef = useRef(null);\n  const emailRef = useRef(null);\n  const firstRef = useRef(null);\n  const lastRef = useRef(null);\n  const fatherNameRef = useRef(null);\n  const phoneRef = useRef(null);\n  const specializationIdRef = useRef(null);\n  const passwordRef = useRef(null);\n  const rePasswordRef = useRef(null);\n  const genderRef = useRef(null);\n  const ageRef = useRef(null);\n  const experienceRef = useRef(null);\n  const descriptionRef = useRef(null);\n  const [hospital, setHospital] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const { hospitalId } = useSelector(({ user }) => user.currentUser);\n  const { doctors } = useSelector(({ doctors }) => doctors.doctors);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    let id;\n\n    specializations.find((specialization) => {\n      if (specialization.name === specializationIdRef.current.value) {\n        id = specialization.id;\n      }\n    });\n\n    const data = {\n      email: emailRef.current.value,\n      gender: genderRef.current.value,\n      age: ageRef.current.value,\n      experience: experienceRef.current.value,\n      description: descriptionRef.current.value,\n      firstName: firstRef.current.value,\n      lastName: lastRef.current.value,\n      fatherName: fatherNameRef.current.value,\n      phoneNumber: parseInt(phoneRef.current.value),\n      specializationId: parseInt(id),\n      password: passwordRef.current.value,\n      rePassword: rePasswordRef.current.value,\n    };\n    console.log(data);\n\n    try {\n      await publicRequest.post(\"/api/v1/auth/registration/doctor\", data, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      });\n    } catch (e) {\n      console.log(e);\n    }\n    dispatch(getDoctorsWithHospitalId(hospitalId));\n    setIsOpen(false);\n  };\n\n  const getClinic = async () => {\n    try {\n      await publicRequest\n        .get(`/api/v1/hospital/get/${hospitalId}`, {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        })\n        .then((res) => {\n          setHospital(res.data);\n          console.log(res.data, \"res\");\n        });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  async function fetchDoctors() {\n    dispatch(getDoctorsWithHospitalId(hospitalId));\n  }\n\n  const getSpezializations = async () => {\n    try {\n      const response = await publicRequest.get(\n        \"/api/v1/specialization/get-all\",\n        {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      );\n      setSpecializations(response.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    getClinic();\n    fetchDoctors().then();\n    getSpezializations();\n  }, []);\n\n  console.log(hospital, \"hospital\");\n\n  const modalUI = [\n    {\n      id: \"email\",\n      ref: emailRef,\n      name: \"Email\",\n      type: \"text\",\n    },\n    {\n      id: \"firstName\",\n      ref: firstRef,\n      name: \"First Name\",\n      type: \"text\",\n    },\n    {\n      id: \"lastName\",\n      ref: lastRef,\n      name: \"Last Name\",\n      type: \"text\",\n    },\n    {\n      id: \"fatherName\",\n      ref: fatherNameRef,\n      name: \"Father Name\",\n      type: \"text\",\n    },\n    {\n      id: \"age\",\n      ref: ageRef,\n      name: \"Age\",\n      type: \"text\",\n    },\n    {\n      id: \"specializationId\",\n      ref: specializationIdRef,\n      name: \"Specialization\",\n      type: \"datalist\",\n    },\n    {\n      id: \"experience\",\n      ref: experienceRef,\n      name: \"Experience\",\n      type: \"text\",\n    },\n    {\n      id: \"description\",\n      ref: descriptionRef,\n      name: \"Description\",\n      type: \"text\",\n    },\n    {\n      id: \"phone\",\n      ref: phoneRef,\n      name: \"Phone\",\n      type: \"text\",\n    },\n    {\n      id: \"password\",\n      ref: passwordRef,\n      name: \"Password\",\n      type: \"password\",\n    },\n    {\n      id: \"rePassword\",\n      ref: rePasswordRef,\n      name: \"Confirm Password\",\n      type: \"password\",\n    },\n  ];\n\n  return (\n    <>\n      {hospital && doctors ? (\n        <div className=\"space-y-7\">\n          <ClinicCard hospital={hospital} getClinic={getClinic} />\n          <List\n            styleList=\"rounded-xl w-full\"\n            header={\n              <div className=\"flex flex-row justify-between\">\n                <h3 className=\"font-medium text-xl\">Doctor</h3>\n                <div\n                  onClick={() => setIsOpen(true)}\n                  className=\"flex cursor-pointer flex-row justify-between items-center space-x-5\"\n                >\n                  <PlusCircleIcon className=\"w-7 text-[#3A57E8]\" />\n                  <p className=\"font-bold text-lg text-[#3A57E8]\">\n                    Add new doctor\n                  </p>\n                </div>\n              </div>\n            }\n          >\n            {doctors.length !== 0 ? (\n              doctors.map((doctor) => (\n                <Block\n                  heading1=\"Name\"\n                  heading1Content={\n                    doctor.user.firstName + \" \" + doctor.user.lastName\n                  }\n                  heading2=\"Specialization\"\n                  heading2Content={doctor.specialization.name}\n                />\n              ))\n            ) : (\n              <div className=\"w-full flex text-gray-400 flex-col p-10 items-center justify-center\">\n                No Doctors\n                <UserGroupIcon className=\"w-11 text-gray-400\" />\n              </div>\n            )}\n            <Modal\n              setIsOpen={setIsOpen}\n              isOpen={isOpen}\n              handleSubmit={handleSubmit}\n            >\n              <div>\n                <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100\">\n                  <UserAddIcon\n                    className=\"h-6 w-6 text-green-600\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n                <div className=\"mt-3 text-center sm:mt-5\">\n                  <Dialog.Title\n                    as=\"h3\"\n                    className=\"text-lg leading-6 font-medium text-gray-900\"\n                  >\n                    Add new Doctor\n                  </Dialog.Title>\n                  <div className=\"mt-2 flex flex-col space-y-4\">\n                    <label\n                      htmlFor=\"img\"\n                      className=\"flex flex-col text-gray-500 text-md items-start\"\n                    >\n                      Photo :\n                      <input\n                        type=\"file\"\n                        id=\"img\"\n                        // ref={imgRef}\n                        className=\"w-full rounded-md\"\n                      />\n                    </label>\n                    {modalUI.map((item) => (\n                      <label\n                        htmlFor={item.id}\n                        className=\"flex flex-col text-gray-500 text-md items-start\"\n                      >\n                        {item.name} :\n                        <input\n                          ref={item.ref}\n                          type={item.type}\n                          id={item.id}\n                          autoComplete=\"off\"\n                          list={\n                            item.type === \"datalist\" ? `${item.id}_list` : null\n                          }\n                          className=\"w-full rounded-md min-h-[50px] border-2 border-gray-300\"\n                        />\n                        <Datalist\n                          data={specializations}\n                          id=\"specializationId_list\"\n                        />\n                      </label>\n                    ))}\n                  </div>\n                  <label\n                    htmlFor=\"gender\"\n                    className=\"flex flex-col mt-4 text-gray-500 text-md items-start\"\n                  >\n                    Gender\n                    <select\n                      ref={genderRef}\n                      name=\"gender\"\n                      id=\"gender\"\n                      className=\"w-full rounded-md min-h-[50px] border-2 border-gray-300\"\n                    >\n                      <option value=\"Male\">Male</option>\n                      <option value=\"Female\">Female</option>\n                      <option value=\"Other\">Other</option>\n                    </select>\n                  </label>\n                </div>\n              </div>\n              <div className=\"mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense\">\n                <button\n                  type=\"submit\"\n                  className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm\"\n                >\n                  Submit\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm\"\n                  onClick={() => setIsOpen(false)}\n                  ref={cancelButtonRef}\n                >\n                  Cancel\n                </button>\n              </div>\n            </Modal>\n          </List>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n\nconst ClinicCard = ({ hospital, getClinic }) => {\n  const dispatch = useDispatch();\n  const user = useSelector(({ user }) => user.currentUser);\n  const [isOpen, setIsOpen] = useState(false);\n  const cancelButtonRef = useRef(null);\n  const nameRef = useRef(null);\n  const phoneRef = useRef(null);\n  const addressRef = useRef(null);\n  const descriptionRef = useRef(null);\n  const cityRef = useRef(null);\n  const [citys, setCity] = useState([]);\n  const role = localStorage.getItem(\"role\");\n\n  async function fetchCity() {\n    try {\n      const responseCity = await publicRequest(\"/api/v1/city/get-all\");\n      setCity(responseCity.data);\n    } catch (e) {\n      if (e.message) {\n        toast(e.message, {\n          type: \"error\",\n          theme: \"light\",\n        });\n      }\n    }\n  }\n\n  useEffect(() => {\n    async function fetch() {\n      dispatch(getDoctorsWithHospitalId(hospital.id));\n    }\n\n    fetchCity();\n  }, [dispatch, hospital.id]);\n\n  if (user.me === \"HOSPITAL_ADMIN\") {\n    return <Loader />;\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let cityId;\n    citys.find((item) => {\n      if (item.name === cityRef.current.value) {\n        cityId = item.id;\n      }\n    });\n    const data = {\n      name: nameRef.current.value,\n      phone: phoneRef.current.value,\n      description: descriptionRef.current.value,\n      address: addressRef.current.value,\n      cityId: parseInt(cityId),\n    };\n    console.log(data);\n\n    try {\n      await publicRequest.put(\n        \"/api/v1/hospital/update/\" + user.hospitalId,\n        data,\n        {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      );\n    } catch (e) {\n      console.log(e);\n    }\n    getClinic(hospital.id);\n    setIsOpen(false);\n  };\n\n  console.log(hospital);\n  return (\n    <div\n      className={clsx(\n        \"flex shadow my-3 bg-white flex-col rounded-lg\",\n        \"sm:flex-row\"\n      )}\n    >\n      <img\n        src={photo_clinic}\n        className={clsx(\"w-full\", \"sm:w-[215px]\")}\n        alt=\"clinic_photo\"\n      />\n      <div\n        className={clsx(\n          \"p-4 flex space-y-5 flex-col\",\n          \"xl:divide-x-2 xl:flex-row\"\n        )}\n      >\n        <div className=\"flex px-4 flex-col flex-grow-0\">\n          <h4 className=\"font-medium text-lg leading-8\">{hospital.name}</h4>\n          <p className=\"font-normal text-[12px] text-gray-400\">\n            \"Многопрофильная клиника Alanda Clinic (Аланда Клиник) Астана\n            проспект Тауелсыздык 33 – контакты, телефоны, график работы и отзывы\n            в каталоге медицинского\"\n          </p>\n          <div className=\"flex justify-end items-center flex-row space-x-1.5\">\n            <StarIcon className=\"text-[#3A57E8] w-5\" />\n            {Math.round(hospital.rate * 10) / 10}\n          </div>\n        </div>\n        <hr />\n        <div className=\"flex px-4 flex-col flex-grow shrink-0 space-y-3\">\n          <div className=\"flex flex-row space-x-1.5 flex-grow items-center justify-start\">\n            <PhoneIcon className=\"w-5 text-[#3A57E8]\" />\n            {hospital.phone}\n          </div>\n          <div className=\"flex flex-row space-x-1.5 flex-grow items-center justify-start\">\n            <LocationMarkerIcon className=\"w-5 text-[#3A57E8]\" />\n            <div>\n              <p>{hospital.address}</p>\n              <p>{hospital.city.name}</p>\n            </div>\n          </div>\n          {user.role ? (\n            <Button name=\"Edit\" onClick={() => setIsOpen(true)} />\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n      {role === \"HOSPITAL_ADMIN\" && (\n        <Modal\n          isOpen={isOpen}\n          setIsOpen={setIsOpen}\n          handleSubmit={handleSubmit}\n        >\n          <div>\n            <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100\">\n              <HomeIcon className=\"h-6 w-6 text-green-600\" aria-hidden=\"true\" />\n            </div>\n            <div className=\"mt-3 text-center sm:mt-5\">\n              <Dialog.Title\n                as=\"h3\"\n                className=\"text-lg leading-6 font-medium text-gray-900\"\n              >\n                Edit Hospital\n              </Dialog.Title>\n              <div className=\"mt-2 flex flex-col space-y-4\">\n                <label\n                  htmlFor=\"name\"\n                  className=\"flex flex-col text-gray-500 text-md items-start\"\n                >\n                  Name :\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    defaultValue={hospital.name}\n                    ref={nameRef}\n                    autoComplete=\"off\"\n                    className=\"w-full rounded-md min-h-[50px] border-2 border-gray-300\"\n                  />\n                </label>\n                <label\n                  htmlFor=\"address\"\n                  className=\"flex flex-col text-gray-500 text-md items-start\"\n                >\n                  Address :\n                  <input\n                    type=\"text\"\n                    ref={addressRef}\n                    id=\"address\"\n                    defaultValue={hospital.address}\n                    autoComplete=\"off\"\n                    className=\"w-full rounded-md min-h-[50px] border-2 border-gray-300\"\n                  />\n                </label>\n                <label\n                  htmlFor=\"phone\"\n                  className=\"flex flex-col text-gray-500 text-md items-start\"\n                >\n                  Phone :\n                  <input\n                    type=\"text\"\n                    id=\"phone\"\n                    ref={phoneRef}\n                    defaultValue={hospital.phone}\n                    autoComplete=\"off\"\n                    className=\"w-full rounded-md min-h-[50px] border-2 border-gray-300\"\n                  />\n                </label>\n                <label\n                  htmlFor=\"description\"\n                  className=\"flex flex-col text-gray-500 text-md items-start\"\n                >\n                  Phone :\n                  <textarea\n                    id=\"description\"\n                    ref={descriptionRef}\n                    defaultValue=\"Многопрофильная клиника Alanda Clinic (Аланда Клиник) Астана проспект Тауелсыздык 33 – контакты, телефоны, график работы и отзывы в каталоге медицинского\"\n                    autoComplete=\"off\"\n                    className=\"w-full rounded-md min-h-[50px] border-2 border-gray-300\"\n                  />\n                </label>\n                <label\n                  htmlFor=\"city\"\n                  className=\"flex flex-col text-gray-500 text-md items-start\"\n                >\n                  City :\n                  <input\n                    type=\"datalist\"\n                    ref={cityRef}\n                    id=\"city\"\n                    autoComplete=\"off\"\n                    defaultValue={hospital.city.name}\n                    list=\"datalist_id\"\n                    className=\"w-full rounded-md min-h-[50px] border-2 border-gray-300\"\n                  />\n                </label>\n                {/*<Datalist data={city} id=\"datalist_id\" />*/}\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense\">\n            <button\n              type=\"submit\"\n              className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm\"\n            >\n              Submit\n            </button>\n            <button\n              type=\"button\"\n              className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm\"\n              onClick={() => setIsOpen(false)}\n              ref={cancelButtonRef}\n            >\n              Cancel\n            </button>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n};\n","import * as React from \"react\";\n\nfunction HomeIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(HomeIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction UserAddIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(UserAddIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction UserGroupIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(UserGroupIcon);\nexport default ForwardRef;"],"names":["Block","heading1","heading1Content","heading2","heading2Content","heading3","heading3Content","className","TextBlock","fieldHeader","content","name","style","AdminClinic","useState","isOpen","setIsOpen","specializations","setSpecializations","cancelButtonRef","useRef","emailRef","firstRef","lastRef","fatherNameRef","phoneRef","specializationIdRef","passwordRef","rePasswordRef","genderRef","ageRef","experienceRef","descriptionRef","hospital","setHospital","dispatch","useDispatch","hospitalId","useSelector","user","currentUser","doctors","handleSubmit","e","preventDefault","find","specialization","current","value","id","data","email","gender","age","experience","description","firstName","lastName","fatherName","phoneNumber","parseInt","specializationId","password","rePassword","console","log","publicRequest","headers","Authorization","localStorage","getItem","getDoctorsWithHospitalId","getClinic","then","res","getSpezializations","response","useEffect","fetchDoctors","modalUI","ref","type","ClinicCard","styleList","header","onClick","PlusCircleIcon","length","map","doctor","UserGroupIcon","UserAddIcon","as","htmlFor","item","autoComplete","list","nameRef","addressRef","cityRef","citys","setCity","role","responseCity","message","toast","theme","fetchCity","me","cityId","phone","address","clsx","src","photo_clinic","alt","StarIcon","Math","round","rate","PhoneIcon","LocationMarkerIcon","city","HomeIcon","defaultValue","ForwardRef","React","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}