{"version":3,"file":"static/js/575.7e1221ec.chunk.js","mappings":"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","sources":["components/admin-blocks/AdminBlocks.jsx","pages/admin/admin-global/add-admin-clinics/add-admin-clinics.jsx","../node_modules/@heroicons/react/outline/esm/UserAddIcon.js"],"sourcesContent":["import { Button } from \"../../ui/button/button\";\n\nexport const Block = ({\n  heading1,\n  heading1Content,\n  heading2,\n  heading2Content,\n  heading3,\n  heading3Content,\n}) => {\n  return (\n    <div className=\"flex flex-row justify-between items-center py-2 px-4 h-[65px] rounded-xl bg-white my-2 mx-4\">\n      <div className=\"flex flex-row space-x-8 items-center\">\n        <TextBlock fieldHeader={heading1} content={heading1Content} />\n        <TextBlock fieldHeader={heading2} content={heading2Content} />\n        {heading3 && (\n          <TextBlock fieldHeader={heading3} content={heading3Content} />\n        )}\n      </div>\n      <div className=\"space-x-4\">\n        <Button name=\"Edit\" style=\"w-20 rounded-3xl\tbg-blue\" />\n        <Button name=\"Delete\" style=\"w-20 rounded-3xl bg-red-600\" />\n      </div>\n    </div>\n  );\n};\n\nconst TextBlock = ({ fieldHeader, content }) => {\n  return (\n    <div className=\"flex flex-col text-center w-[160px] h-fit justify-start items-center\">\n      <p className=\"opacity-40 text-sm\">{fieldHeader}</p>\n      <p className=\"text-md\">{content}</p>\n    </div>\n  );\n};\n","import { List } from \"../../../../components\";\nimport { PlusCircleIcon } from \"@heroicons/react/solid\";\nimport { Block } from \"../../../../components/admin-blocks\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Modal } from \"../../../../ui/modal/modal\";\nimport { UserAddIcon } from \"@heroicons/react/outline\";\nimport { Dialog } from \"@headlessui/react\";\nimport { publicRequest } from \"../../../../api/requestMethods\";\n\nexport const AddAdminClinics = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [admins, setAdmins] = useState([]);\n  const { clinics } = useSelector(({ clinic }) => clinic);\n\n  const dispatch = useDispatch();\n  const cancelButtonRef = useRef(null);\n  const emailRef = useRef(null);\n  const firstRef = useRef(null);\n  const lastRef = useRef(null);\n  const fatherNameRef = useRef(null);\n  const ageRef = useRef(null);\n  const genderRef = useRef(null);\n  const phoneRef = useRef(null);\n  const hospitalIdRef = useRef(null);\n  const passwordRef = useRef(null);\n  const rePasswordRef = useRef(null);\n\n  const getClinicAdmins = async () => {\n    try {\n      await publicRequest\n        .get(\"/api/v1/admin/get/hospitalAdmins\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        })\n        .then((res) => {\n          setAdmins(res.data);\n        });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    getClinicAdmins();\n  }, [dispatch]);\n\n  const modalUI = [\n    {\n      id: \"email\",\n      ref: emailRef,\n      name: \"Email\",\n      type: \"text\",\n    },\n    {\n      id: \"firstName\",\n      ref: firstRef,\n      name: \"First Name\",\n      type: \"text\",\n    },\n    {\n      id: \"lastName\",\n      ref: lastRef,\n      name: \"Last Name\",\n      type: \"text\",\n    },\n    {\n      id: \"fatherName\",\n      ref: fatherNameRef,\n      name: \"Father Name\",\n      type: \"text\",\n    },\n    {\n      id: \"age\",\n      ref: ageRef,\n      name: \"Age\",\n      type: \"text\",\n    },\n    {\n      id: \"phone\",\n      ref: phoneRef,\n      name: \"Phone\",\n      type: \"text\",\n    },\n    {\n      id: \"password\",\n      ref: passwordRef,\n      name: \"Password\",\n      type: \"password\",\n    },\n    {\n      id: \"rePassword\",\n      ref: rePasswordRef,\n      name: \"Confirm Password\",\n      type: \"password\",\n    },\n  ];\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(clinics);\n    const data = {\n      email: emailRef.current.value,\n      firstName: firstRef.current.value,\n      lastName: lastRef.current.value,\n      age: ageRef.current.value,\n      gender: genderRef.current.value,\n      fatherName: fatherNameRef.current.value,\n      phoneNumber: parseInt(phoneRef.current.value),\n      hospitalId: parseInt(hospitalIdRef.current.value),\n      password: passwordRef.current.value,\n      rePassword: rePasswordRef.current.value,\n    };\n\n    try {\n      await publicRequest.post(\n        \"/api/v1/auth/registration/hospitalAdmin\",\n        data,\n        {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      );\n    } catch (e) {\n      console.log(e);\n    }\n    getClinicAdmins();\n    console.log(data);\n    setIsOpen(false);\n  };\n\n  return (\n    <List\n      styleList=\"rounded-xl w-full\"\n      header={\n        <div className=\"flex flex-row justify-between\">\n          <h3 className=\"font-medium text-xl\">Hospital Admin</h3>\n          <div\n            onClick={() => setIsOpen(true)}\n            className=\"flex flex-row cursor-pointer justify-between items-center space-x-5\"\n          >\n            <PlusCircleIcon className=\"w-7 text-[#3A57E8]\" />\n            <p className=\"font-bold text-lg text-[#3A57E8]\">Add new Admin</p>\n          </div>\n        </div>\n      }\n    >\n      {admins.map((admin) => (\n        <Block\n          key={admin.user.id}\n          heading1=\"Name\"\n          heading1Content={`${admin.user.firstName}  ${admin.user.lastName}`}\n          heading2=\"Hospital\"\n          heading2Content={admin.hospital.name}\n        />\n      ))}\n      <Modal setIsOpen={setIsOpen} isOpen={isOpen} handleSubmit={handleSubmit}>\n        <div>\n          <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100\">\n            <UserAddIcon\n              className=\"h-6 w-6 text-green-600\"\n              aria-hidden=\"true\"\n            />\n          </div>\n          <div className=\"mt-3 text-center sm:mt-5\">\n            <Dialog.Title\n              as=\"h3\"\n              className=\"text-lg leading-6 font-medium text-gray-900\"\n            >\n              Add new Admin for Hospital\n            </Dialog.Title>\n            <div className=\"mt-2 flex flex-col space-y-4\">\n              <label\n                htmlFor=\"img\"\n                className=\"flex flex-col text-gray-500 text-md items-start\"\n              >\n                Photo :\n                <input type=\"file\" id=\"img\" className=\"w-full rounded-md\" />\n              </label>\n              <div className=\"grid grid-cols-2 gap-x-4\">\n                {modalUI.map((item) => (\n                  <label\n                    htmlFor={item.id}\n                    className=\"flex flex-col text-gray-500 text-md items-start\"\n                  >\n                    {item.name} :\n                    <input\n                      ref={item.ref}\n                      type={item.type}\n                      id={item.id}\n                      autoComplete=\"off\"\n                      list={item.type === \"datalist\" ? `${item.id}_list` : null}\n                      className=\"w-full rounded-md min-h-[50px] border-2 border-gray-300\"\n                    />\n                  </label>\n                ))}\n                <select\n                  name=\"gender\"\n                  id=\"gender\"\n                  ref={genderRef}\n                  className=\"mt-1 min-w-[250px] border-t-0 border-r-0 border-l-0 bg-none border-b border-black focus-within:border-indigo-600\"\n                >\n                  <option value=\"Male\">Male</option>\n                  <option value=\"Female\">Female</option>\n                  <option value=\"Other\">Other</option>\n                </select>\n                <label\n                  htmlFor=\"hospital_select_id\"\n                  className=\"flex flex-col text-gray-500 text-md items-start\"\n                >\n                  Hospital :\n                  <select\n                    name=\"hospital\"\n                    ref={hospitalIdRef}\n                    className=\"w-full rounded-md min-h-[50px] border-2 border-gray-300\"\n                    id=\"hospital_select_id\"\n                  >\n                    {clinics.map((clinic) => (\n                      <option\n                        value={clinic.id}\n                      >{`${clinic.name}, ${clinic.city.name}`}</option>\n                    ))}\n                  </select>\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense\">\n          <button\n            type=\"submit\"\n            className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm\"\n          >\n            Submit\n          </button>\n          <button\n            type=\"button\"\n            className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm\"\n            onClick={() => setIsOpen(false)}\n            ref={cancelButtonRef}\n          >\n            Cancel\n          </button>\n        </div>\n      </Modal>\n    </List>\n  );\n};\n","import * as React from \"react\";\n\nfunction UserAddIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(UserAddIcon);\nexport default ForwardRef;"],"names":["Block","heading1","heading1Content","heading2","heading2Content","heading3","heading3Content","className","TextBlock","fieldHeader","content","name","style","AddAdminClinics","useState","isOpen","setIsOpen","admins","setAdmins","clinics","useSelector","clinic","dispatch","useDispatch","cancelButtonRef","useRef","emailRef","firstRef","lastRef","fatherNameRef","ageRef","genderRef","phoneRef","hospitalIdRef","passwordRef","rePasswordRef","getClinicAdmins","publicRequest","headers","Authorization","localStorage","getItem","then","res","data","console","log","useEffect","modalUI","id","ref","type","handleSubmit","e","preventDefault","email","current","value","firstName","lastName","age","gender","fatherName","phoneNumber","parseInt","hospitalId","password","rePassword","styleList","header","onClick","PlusCircleIcon","map","admin","user","hospital","UserAddIcon","as","htmlFor","item","autoComplete","list","city","ForwardRef","React","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}