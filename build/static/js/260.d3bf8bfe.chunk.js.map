{"version":3,"file":"static/js/260.d3bf8bfe.chunk.js","mappings":"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","sources":["redux/actions/doctor.js","pages/patient/profile/doctorProfileForPatient/doctorProfileForPatient.jsx"],"sourcesContent":["import { publicRequest } from \"../../api/requestMethods\";\nimport { toast } from \"react-toastify\";\n\nexport const setDoctorWithFeedback = (payload) => ({\n  type: \"SET_DOCTOR\",\n  payload,\n});\n\nexport const setIsFetching = (payload) => ({\n  type: \"SET_IS_FETCHING\",\n  payload,\n});\n\nexport const setError = (payload) => ({\n  type: \"SET_ERROR\",\n  payload,\n});\n\nexport const getDoctorWithFeedback = (id) => async (dispatch) => {\n  dispatch(setIsFetching(true));\n  try {\n    await publicRequest\n      .get(\"/api/v1/patient/profile/doctor/\" + id, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((data) => {\n        console.log(data.data,\"doctor data.data\");\n        dispatch(setDoctorWithFeedback(data.data));\n      });\n  } catch (e) {\n    toast(\"Please check credentials\", {\n      type: \"error\",\n      theme: \"light\",\n    });\n    dispatch(setError(true));\n  }\n};\n","import { Suspense, useEffect, useRef, useState } from \"react\";\nimport { List, UserCard } from \"../../../../components\";\nimport { NavLink, Outlet, useParams } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport Loader from \"../../../../ui/loader/loader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDoctorWithFeedback } from \"../../../../redux/actions/doctor\";\nimport { PlusCircleIcon } from \"@heroicons/react/solid\";\nimport { Modal } from \"../../../../ui/modal/modal\";\nimport { publicRequest } from \"../../../../api/requestMethods\";\nimport { StarIcon } from \"@heroicons/react/outline\";\nimport { Dialog } from \"@headlessui/react\";\n\nexport const DoctorProfileForPatient = () => {\n  const { doctor } = useSelector(({ doctor }) => doctor);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const { id } = useParams();\n\n  const ratingRef = useRef();\n  const feedbackRef = useRef();\n  const cancelButtonRef = useRef(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n\n    const data = {\n      date: `${year}-${month < 10 ? `0${month}` : `${month}`}-${date}`,\n      text: feedbackRef.current.value,\n      rate: parseFloat(ratingRef.current.value),\n    };\n    console.log(data);\n\n    try {\n      await publicRequest.post(\"/api/v1/feedback/doctor/give/\" + id, data, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      });\n    } catch (e) {\n      console.log(e);\n    }\n    dispatch(getDoctorWithFeedback(id));\n\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    console.log(\"useEffect\");\n    dispatch(getDoctorWithFeedback(id));\n  }, [id, dispatch]);\n\n  return (\n    <div className=\"w-full space-y-4 max-w-4xl\">\n      {doctor.doctor ? (\n        <>\n          <UserCard userInformation={doctor.doctor.user} />\n          <div>\n            <List\n              styleList=\"rounded-t-lg\"\n              className=\"shadow-md h-fit max-h-[450px]\"\n              header={\n                <div className=\"w-full flex flex-row justify-between\">\n                  <NavLink\n                    to=\"\"\n                    end\n                    className={({ isActive }) =>\n                      clsx(\n                        \"font-medium text-lg focus:text-[#3A57E8]\",\n                        isActive && \"text-[#3A57E8]\"\n                      )\n                    }\n                  >\n                    About Me\n                  </NavLink>\n                  <NavLink\n                    to=\"feedback\"\n                    className={({ isActive }) =>\n                      clsx(\n                        \"font-medium text-lg focus:text-[#3A57E8]\",\n                        isActive && \"text-[#3A57E8]\"\n                      )\n                    }\n                  >\n                    Feedback\n                  </NavLink>\n                  <NavLink\n                    to=\"calendar\"\n                    className={({ isActive }) =>\n                      clsx(\n                        \"font-medium text-lg focus:text-[#3A57E8]\",\n                        isActive && \"text-[#3A57E8]\"\n                      )\n                    }\n                  >\n                    Calendar\n                  </NavLink>\n                </div>\n              }\n            >\n              <Suspense fallback={<Loader />}>\n                <Outlet />\n              </Suspense>\n            </List>\n            <NavLink\n              to=\"feedback\"\n              onClick={() => setIsOpen(true)}\n              className={clsx(\n                \"py-2 px-4 bg-[#3A57E8] rounded-b-lg w-full flex justify-center font-medium text-lg focus:text-[#3A57E8]\"\n              )}\n            >\n              <div className=\"flex flex-row justify-between items-center space-x-5\">\n                <PlusCircleIcon className=\"w-7 text-white\" />\n                <p className=\"font-bold text-lg text-white\">Add Feedback</p>\n              </div>\n            </NavLink>\n          </div>\n          <Modal\n            isOpen={isOpen}\n            setIsOpen={setIsOpen}\n            handleSubmit={handleSubmit}\n            feedbackRef={feedbackRef}\n            ratingRef={ratingRef}\n          >\n            <div>\n              <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100\">\n                <StarIcon\n                  className=\"h-6 w-6 text-green-600\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n              <div className=\"mt-3 text-center sm:mt-5\">\n                <Dialog.Title\n                  as=\"h3\"\n                  className=\"text-lg leading-6 font-medium text-gray-900\"\n                >\n                  Add Feedback and Rating\n                </Dialog.Title>\n                <div className=\"mt-2\">\n                  <label htmlFor=\"rating\">\n                    Rating:\n                    <select\n                      ref={ratingRef}\n                      name=\"rating\"\n                      id=\"rating\"\n                      className=\"rounded-md ml-2 mb-2\"\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                    </select>\n                  </label>\n                  <input\n                    ref={feedbackRef}\n                    type=\"text\"\n                    id=\"feedback\"\n                    className=\"rounded-lg w-full\"\n                    placeholder=\"Such are nice ....\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense\">\n              <button\n                type=\"submit\"\n                className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm\"\n              >\n                Submit\n              </button>\n              <button\n                type=\"button\"\n                className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm\"\n                onClick={() => setIsOpen(false)}\n                ref={cancelButtonRef}\n              >\n                Cancel\n              </button>\n            </div>\n          </Modal>\n        </>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n"],"names":["setDoctorWithFeedback","payload","type","setError","getDoctorWithFeedback","id","dispatch","publicRequest","headers","Authorization","localStorage","getItem","then","data","console","log","toast","theme","DoctorProfileForPatient","doctor","useSelector","useState","isOpen","setIsOpen","useDispatch","useParams","ratingRef","useRef","feedbackRef","cancelButtonRef","handleSubmit","e","preventDefault","newDate","Date","date","getDate","month","getMonth","year","getFullYear","text","current","value","rate","parseFloat","useEffect","className","userInformation","user","styleList","header","to","end","isActive","clsx","Suspense","fallback","onClick","PlusCircleIcon","StarIcon","as","htmlFor","ref","name","placeholder"],"sourceRoot":""}