{"version":3,"file":"static/js/260.3bff5acc.chunk.js","mappings":"2QAGaA,EAAwB,SAACC,GAAD,MAAc,CACjDC,KAAM,aACND,QAAAA,IAQWE,EAAW,SAACF,GAAD,MAAc,CACpCC,KAAM,YACND,QAAAA,I,SCPWG,EAA0B,WACrC,IAAQC,GAAWC,EAAAA,EAAAA,KAAY,qBAAGD,UAA1BA,OACRE,QAAQC,IAAIH,GAEZ,IAAMI,GAAWC,EAAAA,EAAAA,MAETC,GAAOC,EAAAA,EAAAA,MAAPD,GAQR,OAPAJ,QAAQC,IAAIG,IAEZE,EAAAA,EAAAA,YAAU,WACRN,QAAQC,IAAI,aACZC,EDDiC,SAACE,GAAD,0CAAQ,WAAOF,GAAP,wEAC3CA,EAXyC,CACzCP,KAAM,kBACND,SASuB,IADoB,kBAGnCa,EAAAA,EAAAA,IACC,kCAAoCH,EAAI,CAC3CI,QAAS,CACPC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,aAGjDC,MAAK,SAACC,GACLb,QAAQC,IAAIY,EAAKA,MACjBX,EAAST,EAAsBoB,EAAKA,UAXC,wDAczCC,EAAAA,EAAAA,IAAM,2BAA4B,CAChCnB,KAAM,QACNoB,MAAO,UAETb,EAASN,GAAS,IAlBuB,yDAAR,sDCCxBoB,CAAsBZ,MAC9B,KAGD,gBAAKa,UAAU,sBAAf,SACGnB,GACC,iCACE,SAAC,KAAD,CAAUoB,gBAAiBpB,EAAOA,OAAOqB,QACzC,SAAC,KAAD,CACEF,UAAU,gCACVG,QACE,iBAAKH,UAAU,uCAAf,WACE,SAAC,KAAD,CACEI,GAAG,GACHC,KAAG,EACHL,UAAW,gBAAGM,EAAH,EAAGA,SAAH,OACTC,EAAAA,EAAAA,GACE,2CACAD,GAAY,mBANlB,uBAYA,SAAC,KAAD,CACEF,GAAG,WACHJ,UAAW,gBAAGM,EAAH,EAAGA,SAAH,OACTC,EAAAA,EAAAA,GACE,2CACAD,GAAY,mBALlB,uBAWA,SAAC,KAAD,CACEF,GAAG,WACHJ,UAAW,gBAAGM,EAAH,EAAGA,SAAH,OACTC,EAAAA,EAAAA,GACE,2CACAD,GAAY,mBALlB,yBA3BN,UAyCE,SAAC,EAAAE,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,YAKN,SAAC,IAAD","sources":["redux/actions/doctor.js","pages/patient/profile/doctorProfileForPatient/doctorProfileForPatient.jsx"],"sourcesContent":["import { publicRequest } from \"../../api/requestMethods\";\nimport { toast } from \"react-toastify\";\n\nexport const setDoctorWithFeedback = (payload) => ({\n  type: \"SET_DOCTOR\",\n  payload,\n});\n\nexport const setIsFetching = (payload) => ({\n  type: \"SET_IS_FETCHING\",\n  payload,\n});\n\nexport const setError = (payload) => ({\n  type: \"SET_ERROR\",\n  payload,\n});\n\nexport const getDoctorWithFeedback = (id) => async (dispatch) => {\n  dispatch(setIsFetching(true));\n  try {\n    await publicRequest\n      .get(\"/api/v1/patient/profile/doctor/\" + id, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((data) => {\n        console.log(data.data);\n        dispatch(setDoctorWithFeedback(data.data));\n      });\n  } catch (e) {\n    toast(\"Please check credentials\", {\n      type: \"error\",\n      theme: \"light\",\n    });\n    dispatch(setError(true));\n  }\n};\n","import { Suspense, useEffect } from \"react\";\nimport { List, UserCard } from \"../../../../components\";\nimport { NavLink, Outlet, useParams } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport Loader from \"../../../../ui/loader/loader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDoctorWithFeedback } from \"../../../../redux/actions/doctor\";\n\nexport const DoctorProfileForPatient = () => {\n  const { doctor } = useSelector(({ doctor }) => doctor);\n  console.log(doctor);\n\n  const dispatch = useDispatch();\n\n  const { id } = useParams();\n  console.log(id);\n\n  useEffect(() => {\n    console.log(\"useEffect\");\n    dispatch(getDoctorWithFeedback(id));\n  }, []);\n\n  return (\n    <div className=\"space-y-4 max-w-4xl\">\n      {doctor ? (\n        <>\n          <UserCard userInformation={doctor.doctor.user} />\n          <List\n            className=\"shadow-md h-fit max-h-[450px]\"\n            header={\n              <div className=\"w-full flex flex-row justify-between\">\n                <NavLink\n                  to=\"\"\n                  end\n                  className={({ isActive }) =>\n                    clsx(\n                      \"font-medium text-lg focus:text-[#3A57E8]\",\n                      isActive && \"text-[#3A57E8]\"\n                    )\n                  }\n                >\n                  About Me\n                </NavLink>\n                <NavLink\n                  to=\"feedback\"\n                  className={({ isActive }) =>\n                    clsx(\n                      \"font-medium text-lg focus:text-[#3A57E8]\",\n                      isActive && \"text-[#3A57E8]\"\n                    )\n                  }\n                >\n                  Feedback\n                </NavLink>\n                <NavLink\n                  to=\"calendar\"\n                  className={({ isActive }) =>\n                    clsx(\n                      \"font-medium text-lg focus:text-[#3A57E8]\",\n                      isActive && \"text-[#3A57E8]\"\n                    )\n                  }\n                >\n                  Calendar\n                </NavLink>\n              </div>\n            }\n          >\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          </List>\n        </>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n"],"names":["setDoctorWithFeedback","payload","type","setError","DoctorProfileForPatient","doctor","useSelector","console","log","dispatch","useDispatch","id","useParams","useEffect","publicRequest","headers","Authorization","localStorage","getItem","then","data","toast","theme","getDoctorWithFeedback","className","userInformation","user","header","to","end","isActive","clsx","Suspense","fallback"],"sourceRoot":""}