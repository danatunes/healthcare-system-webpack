{"version":3,"file":"static/js/648.71e982b1.chunk.js","mappings":"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","sources":["pages/auth/signUp/signUp.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { InputWithBottomBorder } from \"../../../ui/inputs/inputWithBottomBorder\";\nimport { Button } from \"../../../ui/button/button\";\nimport clsx from \"clsx\";\nimport { publicRequest } from \"../../../api/requestMethods\";\nimport { Datalist } from \"../../../ui/datalist/datalist\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useForm } from \"react-hook-form\";\n\nexport const SignUp = () => {\n  const dataForUI = [\n    {\n      id: \"fatherName\",\n      name: \"Father Name\",\n      type: \"text\",\n    },\n    {\n      id: \"firstName\",\n      name: \"First Name\",\n      type: \"text\",\n    },\n    {\n      id: \"lastName\",\n      name: \"Last Name\",\n      type: \"text\",\n    },\n    {\n      id: \"email\",\n      name: \"Email\",\n      type: \"email\",\n    },\n    {\n      id: \"phoneNumber\",\n      name: \"Phone\",\n      type: \"tel\",\n    },\n    {\n      id: \"iin\",\n      name: \"IIN\",\n      type: \"text\",\n    },\n    {\n      id: \"dateOfBirth\",\n      name: \"Date of Birthday\",\n      type: \"date\",\n    },\n    {\n      id: \"password\",\n      name: \"Password\",\n      type: \"password\",\n    },\n    {\n      id: \"rePassword\",\n      name: \"Confirm Password\",\n      type: \"password\",\n    },\n    {\n      id: \"cityId\",\n      name: \"City\",\n      type: \"datalistCity\",\n    },\n    {\n      id: \"hospitalId\",\n      name: \"Clinics\",\n      type: \"datalist\",\n    },\n  ];\n\n  const [city, setCity] = useState([]);\n  const [hospitals, setHospitals] = useState([]);\n  const [cityId, setCityId] = useState(null);\n  const navigate = useNavigate();\n  const { register } = useForm();\n\n  async function fetch() {\n    try {\n      const responseCity = await publicRequest(\"/api/v1/city/get-all\");\n      setCity(responseCity.data);\n    } catch (e) {\n      if (e.message) {\n        toast(e.message, {\n          type: \"error\",\n          theme: \"light\",\n        });\n      }\n    }\n  }\n\n  useEffect(() => {\n    fetch().then();\n  }, []);\n\n  const onChangeCity = async (e) => {\n    let cityId;\n    city.find((item) => {\n      if (item.name === e.target.value) {\n        cityId = item.id;\n      }\n    });\n    setCityId(cityId);\n    const response = await publicRequest.get(\"api/v1/hospital/city/\" + cityId);\n    setHospitals(response.data.hospitals);\n  };\n\n  const handleSignUp = async (e) => {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    console.log(formData);\n    let requestData = Object.fromEntries(formData);\n    console.log(requestData);\n    let clinicId;\n    hospitals.find((item) => {\n      if (item.name === requestData.hospitalId) {\n        clinicId = item.id;\n      }\n    });\n    delete requestData.city;\n    delete requestData.cityId;\n    requestData.hospitalId = clinicId;\n    let number = requestData.phoneNumber;\n    if (number.toString().includes(\"a\", /[A-Z] || [a-z] || \" \"/)) {\n      toast(\"Wrong number\", {\n        style: \"error\",\n        position: \"top-right\",\n      });\n      return;\n    }\n\n    try {\n      await publicRequest.post(\"api/v1/auth/registration/patient\", requestData);\n      toast(\"Succesfully created\", {\n        type: \"success\",\n        theme: \"light\",\n      });\n      navigate(\"/login\");\n    } catch (e) {\n      if (e.message) {\n        toast(e.response.data.message, {\n          type: \"error\",\n          theme: \"light\",\n        });\n      }\n    }\n  };\n\n  return (\n    <form onSubmit={handleSignUp}>\n      <div className=\"flex flex-col items-center justify-center space-y-2\">\n        <h1 className=\"items-center text-4xl font-medium text-black\">\n          Sign Up\n        </h1>\n        <p className=\"text-[#8A92A6]\">Create your account</p>\n      </div>\n      <div className={clsx(\"grid grid-cols-1 gap-3\", \"md:grid-cols-2\")}>\n        {dataForUI.map((item) => (\n          <label htmlFor={item.id}>\n            <InputWithBottomBorder\n              key={item.id}\n              id={`${item.id}`}\n              max=\"2022-05-31\"\n              required={true}\n              register={register}\n              name={item.name}\n              type={\n                item.type === \"datalist\" || item.type === \"datalistCity\"\n                  ? null\n                  : item.type\n              }\n              onChange={item.type === \"datalistCity\" ? onChangeCity : null}\n              placeholder={item.name}\n              autoComplete=\"off\"\n              list={\n                item.type === \"datalist\" || item.type === \"datalistCity\"\n                  ? `${item.id}_list`\n                  : null\n              }\n            />\n          </label>\n        ))}\n        <select\n          name=\"gender\"\n          id=\"gender\"\n          className=\"mt-1 min-w-[250px] border-t-0 border-r-0 border-l-0 bg-none border-b border-black focus-within:border-indigo-600\"\n        >\n          <option value=\"Male\">Male</option>\n          <option value=\"Female\">Female</option>\n          <option value=\"Other\">Other</option>\n        </select>\n        <Datalist data={hospitals} id=\"hospitalId_list\" />\n        <Datalist data={city} id=\"cityId_list\" />\n      </div>\n      <div className=\"flex flex-col items-center mt-4 justify-center space-y-5\">\n        <Button name=\"Sign up\" type=\"submit\" />\n        <p className=\"text-black\">\n          Already have an Account{\" \"}\n          <NavLink className=\"text-[#458FF6]\" to=\"/login\">\n            Sign in\n          </NavLink>\n        </p>\n      </div>\n    </form>\n  );\n};\n"],"names":["SignUp","useState","city","setCity","hospitals","setHospitals","setCityId","navigate","useNavigate","register","useForm","publicRequest","responseCity","data","message","toast","type","theme","useEffect","fetch","then","onChangeCity","e","find","item","name","target","value","cityId","id","response","handleSignUp","preventDefault","formData","FormData","currentTarget","console","log","requestData","Object","fromEntries","hospitalId","clinicId","phoneNumber","toString","includes","style","position","onSubmit","className","clsx","map","htmlFor","max","required","onChange","placeholder","autoComplete","list","to"],"sourceRoot":""}