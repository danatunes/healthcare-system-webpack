{"version":3,"file":"static/js/212.b116f370.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/outline/esm/OfficeBuildingIcon.js","../node_modules/@heroicons/react/outline/esm/FilterIcon.js","../node_modules/@heroicons/react/solid/esm/SearchIcon.js","pages/patient/patientClinics/patientClinics.jsx"],"sourcesContent":["import * as React from \"react\";\n\nfunction OfficeBuildingIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(OfficeBuildingIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction FilterIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(FilterIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction SearchIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(SearchIcon);\nexport default ForwardRef;","import { List } from \"../../../components\";\nimport {\n  FilterIcon,\n  LocationMarkerIcon,\n  OfficeBuildingIcon,\n  PhoneIcon,\n  StarIcon,\n} from \"@heroicons/react/outline\";\nimport photo_clinic from \"../../../images/example_photo_clinic.png\";\nimport React, { Fragment, useEffect, useMemo, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Menu, Transition } from \"@headlessui/react\";\nimport clsx from \"clsx\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllClinics } from \"../../../redux/actions/clinic\";\nimport { SearchIcon } from \"@heroicons/react/solid\";\nimport Loader from \"../../../ui/loader/loader\";\n\nexport const PatientClinics = () => {\n  const clinics = useSelector(({ clinic }) => clinic.clinics);\n  const dispatch = useDispatch();\n\n  console.log(clinics);\n\n  useEffect(() => {\n    dispatch(getAllClinics());\n    setData(clinics);\n  }, []);\n\n  const sortByRating = (isRating) => {\n    if (isRating) {\n      setData((prevState) => [...prevState.sort((a, b) => b.rate - a.rate)]);\n      console.log(data, \"sort sort\");\n      return;\n    }\n    setData(dataByDefault);\n  };\n\n  const dataByDefault = useMemo(() => clinics, [sortByRating]);\n\n  const [data, setData] = useState(dataByDefault);\n  if (!data) return <Loader />;\n\n  const [inputText, setInputText] = useState(\"\");\n  let inputHandler = (e) => {\n    var lowerCase = e.target.value.toLowerCase();\n    setInputText(lowerCase);\n  };\n\n  return (\n    <div className=\"w-full\">\n      <div\n        className={clsx(\n          \"flex flex-row justify-start items-center pb-7\",\n          \"sm:pr-7\"\n        )}\n      >\n        <div\n          className={clsx(\n            \"flex flex-col w-full space-y-2\",\n            \"sm:space-y-0 sm:w-3/4 sm:flex-row sm:justify-between\"\n          )}\n        >\n          <h1 className=\"text-2xl font-medium\">Clinics</h1>\n          <div\n            className={clsx(\n              \"flex flex-row items-center space-x-3 w-full\",\n              \"sm:w-2/3\"\n            )}\n          >\n            <div className=\"mt-1 w-full relative z-0 rounded-md shadow-sm\">\n              <input\n                type=\"text\"\n                name=\"account-number\"\n                id=\"account-number\"\n                onChange={inputHandler}\n                className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pr-10 sm:text-sm border-black rounded-md\"\n                placeholder=\"Search\"\n              />\n              <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\n                <SearchIcon\n                  className=\"h-5 w-5 text-gray-400\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n            </div>\n            <Filter sortByRating={sortByRating} />\n          </div>\n        </div>\n      </div>\n      <ListPart data={data} input={inputText} />\n    </div>\n  );\n};\n\nconst ListPart = ({ data, input }) => {\n  const filteredData = data.filter((el) => {\n    if (input === \"\") {\n      return el.name;\n    } else {\n      return el.name.toLowerCase().includes(input);\n    }\n  });\n\n  console.log(filteredData, \"filteredData\");\n\n  return (\n    <List className=\"px-4 py-3 max-h-[500px]\">\n      {filteredData ? (\n        filteredData.length > 0 ? (\n          filteredData.map((clinic) => (\n            <NavLink to={`${clinic.id}`} key={`${clinic.id}`}>\n              <ClinicCard key={clinic.id} {...clinic} />\n            </NavLink>\n          ))\n        ) : (\n          <div className=\"w-full px-6 py-3 text-gray-400 flex items-center justify-center\">\n            <OfficeBuildingIcon className=\"w-11\" />\n            <h1>No clinics found</h1>\n          </div>\n        )\n      ) : (\n        <Loader />\n      )}\n    </List>\n  );\n};\n\nconst Filter = ({ sortByRating }) => {\n  return (\n    <Menu as=\"div\" className=\"relative inline-block text-left\">\n      <div>\n        <Menu.Button className=\"bg-gray-100 rounded-full flex items-center text-gray-400 hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500\">\n          <span className=\"sr-only\">Open options</span>\n          <FilterIcon className=\"w-5 text-[#3A57E8]\" />\n        </Menu.Button>\n      </div>\n\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n          <div className=\"py-1\">\n            <Menu.Item>\n              {({ active }) => (\n                <button\n                  onClick={() => sortByRating(false)}\n                  className={clsx(\n                    active ? \"bg-gray-100 text-gray-900\" : \"text-gray-700\",\n                    \"block w-full text-left px-4 py-2 text-sm\"\n                  )}\n                >\n                  By default\n                </button>\n              )}\n            </Menu.Item>\n            <Menu.Item>\n              {({ active }) => (\n                <button\n                  onClick={() => sortByRating(true)}\n                  className={clsx(\n                    active ? \"bg-gray-100 text-gray-900\" : \"text-gray-700\",\n                    \"block w-full text-left px-4 py-2 text-sm\"\n                  )}\n                >\n                  By rating\n                </button>\n              )}\n            </Menu.Item>\n          </div>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  );\n};\n\nconst ClinicCard = ({ name, rate, address, phone, city, description }) => {\n  console.log(description, \"description\");\n  return (\n    <div\n      className={clsx(\n        \"flex shadow my-3 bg-white flex-col rounded-lg\",\n        \"sm:flex-row\"\n      )}\n    >\n      <img\n        src={photo_clinic}\n        className={clsx(\"w-full\", \"sm:w-[215px]\")}\n        alt=\"clinic_photo\"\n      />\n      <div\n        className={clsx(\n          \"p-4 w-full flex space-y-5 flex-col\",\n          \"xl:divide-x-2 xl:flex-row\"\n        )}\n      >\n        <div className={clsx(\"flex px-4 flex-col flex-grow-0\", \"xl:w-9/12\")}>\n          <h4\n            className={clsx(\n              \"font-medium overflow-hidden truncate text-lg w-[150px] leading-8\",\n              \"xl:w-[200px]\",\n              \"md:w-[170px]\"\n            )}\n          >\n            {name}\n          </h4>\n          <p className=\"font-normal text-sm text-gray-400\">\n            {description !== null\n              ? description\n              : \"Многопрофильная клиника Alanda Clinic (Аланда Клиник) Астана проспект Тауелсыздык 33 – контакты, телефоны, график работы и отзывы в каталоге медицинского\"}\n          </p>\n          <div className=\"flex justify-end items-center flex-row space-x-1.5\">\n            <StarIcon className=\"text-[#3A57E8] w-5\" />\n            {Math.round(rate * 10) / 10}\n          </div>\n        </div>\n        <hr />\n        <div\n          className={clsx(\n            \"flex px-4 flex-col space-x-0 flex-grow shrink-0 space-y-3\",\n            \"sm:flex-col sm:space-x-0\",\n            \"md:flex-col md:space-x-0\",\n            \"lg:flex-row lg:space-x-3\",\n            \"xl:w-3/12 xl:flex-col xl:space-x-0\"\n          )}\n        >\n          <div className=\"flex flex-row space-x-1.5 items-center justify-start\">\n            <PhoneIcon className=\"w-5 text-[#3A57E8] flex-grow-0 shrink-0 mr-1.5\" />\n            {phone}\n          </div>\n          <div className=\"flex flex-row space-x-1.5 flex-grow items-center justify-start\">\n            <LocationMarkerIcon className=\"w-5 text-[#3A57E8] flex-grow-0 shrink-0\" />\n            <div>\n              <p>{address}</p>\n              <p>{city && city.name}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":["React","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","fillRule","clipRule","PatientClinics","clinics","useSelector","clinic","dispatch","useDispatch","console","log","useEffect","getAllClinics","setData","sortByRating","isRating","prevState","sort","a","b","rate","data","dataByDefault","useMemo","useState","inputText","setInputText","className","clsx","type","name","id","onChange","e","lowerCase","target","value","toLowerCase","placeholder","Filter","ListPart","input","filteredData","filter","el","includes","length","map","to","ClinicCard","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","active","onClick","address","phone","city","description","src","photo_clinic","alt","StarIcon","Math","round","PhoneIcon","LocationMarkerIcon"],"sourceRoot":""}