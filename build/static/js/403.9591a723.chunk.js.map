{"version":3,"file":"static/js/403.9591a723.chunk.js","mappings":"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","sources":["ui/datalist/datalist.jsx","pages/auth/signUp/signUp.jsx","ui/inputs/inputWithBottomBorder.jsx"],"sourcesContent":["export const Datalist = ({ id, data }) => {\n  console.log(data);\n  return (\n    <datalist id={id}>\n      {data &&\n        data.map((option) => <option key={option.name} value={option.name} />)}\n    </datalist>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { InputWithBottomBorder } from \"../../../ui/inputs/inputWithBottomBorder\";\nimport { LoginIntegration } from \"../../../components\";\nimport { Button } from \"../../../ui/button/button\";\nimport clsx from \"clsx\";\nimport { publicRequest } from \"../../../api/requestMethods\";\nimport { Datalist } from \"../../../ui/datalist/datalist\";\nimport { NavLink } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nexport const SignUp = () => {\n  const dataForUI = [\n    {\n      id: \"fatherName\",\n      name: \"Father Name\",\n      type: \"text\",\n    },\n    {\n      id: \"firstName\",\n      name: \"First Name\",\n      type: \"text\",\n    },\n    {\n      id: \"lastName\",\n      name: \"Last Name\",\n      type: \"text\",\n    },\n    {\n      id: \"email\",\n      name: \"Email\",\n      type: \"email\",\n    },\n    {\n      id: \"phoneNumber\",\n      name: \"Phone\",\n      type: \"tel\",\n    },\n    {\n      id: \"iin\",\n      name: \"IIN\",\n      type: \"text\",\n    },\n    {\n      id: \"password\",\n      name: \"Password\",\n      type: \"password\",\n    },\n    {\n      id: \"rePassword\",\n      name: \"Confirm Password\",\n      type: \"password\",\n    },\n    {\n      id: \"cityId\",\n      name: \"City\",\n      type: \"datalistCity\",\n    },\n    {\n      id: \"hospitalId\",\n      name: \"Clinics\",\n      type: \"datalist\",\n    },\n  ];\n\n  const [city, setCity] = React.useState([]);\n  const [hospitals, setHospitals] = React.useState([]);\n  const [cityId, setCityId] = React.useState();\n\n  useEffect(async () => {\n    try {\n      const responseCity = await publicRequest(\"/api/v1/city/get-all\");\n      setCity(responseCity.data);\n      toast(\"Succesfully created\", {\n        type: \"success\",\n        theme: \"light\",\n      });\n    } catch (e) {\n      toast(\"Please check your data\", {\n        type: \"error\",\n        theme: \"light\",\n      });\n    }\n  }, []);\n\n  const onChangeCity = async (e) => {\n    let cityId;\n    city.find((item) => {\n      if (item.name === e.target.value) {\n        cityId = item.id;\n      }\n    });\n    setCityId(cityId);\n    const response = await publicRequest.get(\"api/v1/hospital/city/\" + cityId);\n    console.log(response.data);\n    setHospitals(response.data.hospitals);\n  };\n\n  const handleSignUp = async (e) => {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    let requestData = Object.fromEntries(formData);\n    let clinicId;\n    hospitals.find((item) => {\n      if (item.name === requestData.Clinics) {\n        clinicId = item.id;\n      }\n    });\n    requestData.City = cityId;\n    requestData.Clinics = clinicId;\n    const response = await publicRequest.post(\n      \"api/v1/auth/registration/patient\",\n      requestData\n    );\n    console.log(response);\n  };\n\n  return (\n    <form onSubmit={handleSignUp}>\n      <div className=\"flex flex-col items-center justify-center space-y-2\">\n        <h1 className=\"items-center text-4xl font-medium text-black\">\n          Sign Up\n        </h1>\n        <p className=\"text-[#8A92A6]\">Create your account</p>\n      </div>\n      <div className={clsx(\"grid grid-cols-1 gap-3\", \"md:grid-cols-2\")}>\n        {dataForUI.map((item) => (\n          <label htmlFor={item.id}>\n            <InputWithBottomBorder\n              key={item.id}\n              id={`${item.id}_${item.name}`}\n              name={item.name}\n              type={\n                item.type === \"datalist\" || item.type === \"datalistCity\"\n                  ? null\n                  : item.type\n              }\n              onChange={item.type === \"datalistCity\" ? onChangeCity : null}\n              placeholder={item.name}\n              autoComplete=\"off\"\n              list={\n                item.type === \"datalist\" || item.type === \"datalistCity\"\n                  ? item.id\n                  : null\n              }\n            />\n          </label>\n        ))}\n        <Datalist data={hospitals} id=\"hospitalId\" />\n        <Datalist data={city} id=\"cityId\" />\n      </div>\n      <div className=\"flex flex-col items-center mt-4 justify-center space-y-5\">\n        <div className=\"flex w-full items-center justify-center space-x-2\">\n          <input type=\"checkbox\" className=\"border-0\" />\n          <p className=\"text-[#8A92A6]\">I agree with the terms of use</p>\n        </div>\n        <Button name=\"Sign up\" type=\"submit\" />\n        <p className=\"text-black\">or sign up with other accounts?</p>\n        <LoginIntegration />\n        <p className=\"text-black\">\n          Already have an Account{\" \"}\n          <NavLink className=\"text-[#458FF6]\" to=\"/login\">\n            Sign in\n          </NavLink>\n        </p>\n      </div>\n    </form>\n  );\n};\n","import React from \"react\";\nimport clsx from \"clsx\";\n\nexport const InputWithBottomBorder = ({\n  id,\n  name,\n  style,\n  placeholder,\n  type,\n  list,\n  autoComplete,\n  onChange,\n}) => {\n  return (\n    <div\n      className={clsx(\n        \"mt-1 min-w-[250px] border-b border-black focus-within:border-indigo-600\",\n        style\n      )}\n    >\n      <input\n        type={type}\n        name={name}\n        autoComplete={autoComplete}\n        onChange={onChange}\n        id={id}\n        className=\"block min-h-[40px] w-full border-0 border-transparent bg-transparent outline-0 focus:border-none sm:text-sm\"\n        placeholder={placeholder}\n        list={list}\n      />\n    </div>\n  );\n};\n"],"names":["Datalist","id","data","console","log","map","option","value","name","SignUp","React","city","setCity","hospitals","setHospitals","cityId","setCityId","useEffect","publicRequest","responseCity","toast","type","theme","onChangeCity","e","find","item","target","response","handleSignUp","preventDefault","formData","FormData","currentTarget","requestData","Object","fromEntries","Clinics","clinicId","City","onSubmit","className","clsx","htmlFor","onChange","placeholder","autoComplete","list","to","InputWithBottomBorder","style"],"sourceRoot":""}